name: rust

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: [push]

env:
  CARGO_TERM_COLOR: always
  STATIC_BUILD_TARGET: x86_64-unknown-linux-musl
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  RUST_BACKTRACE: '1'

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo check
      - run: cargo check --benches

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: git submodule init && git submodule update --recursive --remote
      - run: cargo build --verbose
      - run: cargo clippy --tests -- -D warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@v2
        # temporary pinning the draft because the test vectors fail
      - run: git submodule init && git submodule update --recursive --remote && cd draft-ietf-spice-sd-cwt && git reset --hard 6b36a43
      - run: cargo test --all-features
      - run: cargo test --doc
      - run: cargo test --benches

  wasm-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate_paths: ["cose-key", "cose-key-confirmation", "cose-key-set", "cose-key-thumbprint", "esdicawt", "esdicawt-spec", "spice-oidc-cwt"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
            target: wasm32-unknown-unknown
            rustflags: ''
      - uses: browser-actions/setup-chrome@latest
        id: setup-chrome
        with:
            chrome-version: stable
      - run: git submodule init && git submodule update --recursive --remote
      - run: |
            echo "CHROME_PATH=${{ steps.setup-chrome.outputs.chrome-path }}" >> $GITHUB_ENV
      - name: Install wasm-pack
        uses: taiki-e/install-action@v2
        with:
            tool: wasm-pack
      - name: Run tests (wasm)
        run: wasm-pack test --headless --chrome ./${{ matrix.crate_paths }}

  hack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@cargo-hack
      - uses: Swatinem/rust-cache@v2
      - name: cargo/hack (verify features compile in isolation)
        run: cargo hack check --each-feature --no-dev-deps
